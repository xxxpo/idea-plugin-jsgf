{
  parserClass="com.xxxlin.jsgf.parser.JsgfParser"
  parserUtilClass="com.xxxlin.jsgf.JsgfParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Jsgf"
  psiImplClassSuffix="Impl"
  psiPackage="com.xxxlin.jsgf.psi"
  psiImplPackage="com.xxxlin.jsgf.psi.impl"

  elementTypeHolderClass="com.xxxlin.jsgf.psi.JsgfTypes"
  elementTypeClass="com.xxxlin.jsgf.JsgfElementType"
  tokenTypeClass="com.xxxlin.jsgf.JsgfTokenType"

  psiImplUtilClass="com.xxxlin.jsgf.JsgfPsiImplUtil"


  tokens = [
    OP_EQ="="
    OP_OR="|"
    OP_OPT="?"
    OP_ONEMORE="+"
    OP_ZEROMORE="*"
    OP_AND="&"
    OP_NOT="!"
    SEMICOLON=";"
    LEFT_BRACE="{"
    RIGHT_BRACE="}"
    LEFT_BRACKET="["
    RIGHT_BRACKET="]"
    LEFT_PAREN="("
    RIGHT_PAREN=")"
    SPACE='regexp:\s+'
    STRING="regexp:('([^'\\]|\\.)*'|\"([^\"\\]|\\\"|\\'|\\)*\")"
    TEXT2=""
    LINE_COMMENT="regexp://.*"
    BLOCK_COMMENT="regexp:/\*(.|\n)*\*/"
  ]
}

jsgfFile ::= document grammar_declarations import_declarations* rule_declarations*


// #JSGF V1.0 utf-8 en;
document ::= KEYWORD VERSION? CHAR_ENCODING? LOCALE? ";"


// grammar sampleTag;
grammar_declarations  ::= LINE_COMMENT* BLOCK_COMMENT* grammar
grammar ::= KEYWORD GRAMMAR_NAME ";"


// 导入
// import <fullyQualifiedRuleName>;
// import <fullGrammarName.*>;
import_declarations ::= LINE_COMMENT* BLOCK_COMMENT* import
import ::= KEYWORD IMPORT_PACKAGE_NAME ";"


// 语法规则
rule_declarations ::= LINE_COMMENT | BLOCK_COMMENT | rule
// private <vlCtrlDown> = (调低|减小|降低|减);
rule ::= MODIFIER? def_rule_name_wrapper "=" rule_expansion ";"
{
  methods=[getDefRuleName getValue getPresentation getModifier]
}

def_rule_name_wrapper ::= DEF_RULE_NAME {
  mixin="com.xxxlin.jsgf.JsgfNamedElementImpl"
  implements="com.xxxlin.jsgf.JsgfNamedElement"
  methods=[getName setName getNameIdentifier]
}

// slop_string 槽位文本 一|二|三|四[五|六|七]
// SLOP_STRING_LITERAL 字面文本
// KEYWORD <key>
// LABEL_STRING "<a>"
// 不加这层会导致idea卡死
rule_expansion ::= exp
exp ::= WEIGHTS? (SLOP_STRING_LITERAL | LINE_COMMENT | BLOCK_COMMENT | LABEL_STRING | reference_rule_name | "(" exp ")" | "[" exp "]") exp* ("+"|"*")? (OP_OR exp)*
reference_rule_name ::= RULE_NAME {
  mixin="com.xxxlin.jsgf.JsgfNamedElementImpl"
  implements="com.xxxlin.jsgf.JsgfNamedElement"
  methods=[getReference getName setName getNameIdentifier]
}